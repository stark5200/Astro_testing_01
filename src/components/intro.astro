---
import f1 from "../../public/f1.jpg"
import f2 from "../../public/f2.jpg"
---

<div class="relative mx-12 flex flex-col items-center justify-center">
  <h1 class="text-xl">
    Enter my Beautiful website <span class="font-bold"> Please Hire me</span>
  </h1>
  <div class="relative">

    <svg class="absolute h-full w-full overflow-visible" width="540" height="255" viewBox="0 0 540 255" fill="none" xmlns="http://www.w3.org/2000/svg" >
      <path id="border-path" d="M538 253.5V167H2L2 2" stroke="url(#paint0_linear_6_33)" stroke-width="3" stroke-linecap="round"></path>
      <defs>
        <linearGradient id="#paint0_linear_6_33" x1="0%" y1="0%" x2="589" y2="275.5" gradientUnits="userSpaceOnUse">
          <stop offset="0%" style={{ stopColor: "#DC3A2B" }} ></stop>
          <stop offset="100%" style={{ stopColor: "#E18510" }} ></stop>
        </linearGradient>
      </defs>  
    </svg>

    <p id="anim-p" class="p-6 text-lg">
      sdbasfbsdfb
      sfb
      sdfb

      dsfb
      fds
      <br>
      sdbasfbsdfb 
      <br>

      KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK
    </p>
  </div>

  <div class="flex justify-center pt-12 text-center mb-12 xl:gap-16">
    <div class="w-32">
      <h2>Art Posts</h2>
      <p id="art-counter" class="text-xl font-bold">85</p>
    </div>
    <div class="w-32">
      <h2>Youtube</h2>
      <p id="youtube-counter" class="text-xl font-bold">1.3k</p>
    </div>
    <div class="w-32">
      <h2>Reviews</h2>
      <p id="reviews-counter" class="text-xl font-bold">36</p>
    </div>
  </div>

  <div class="relative">
    <img class="h-full" src=f1 alt="First Image">
    <div class="absolute bottom-0 right-0 translate-y-1/4">
      <img src="../../public/f2.jpg" alt="Second Image">
    </div>
  </div>
</div>

<div class="mt-12 h-4 w-full bg-black"></div>

<style>
  #border-path{
    animation: draw 1s forward 1s ease-out
  }
  @keyframes draw {
    to {
      stroke-dashoffset: 0;
    }
  } 
</style>

<script>
  function updatePath(){
    const textMain = document.querySelector('#anim-p') as HTMLElement
    const path = document.querySelector('#border-path') as SVGPathElement

    if(textMain && path){
      path.setAttribute('d', `M0,0 V${textMain.offsetHeight} H${textMain.offsetWidth} v${textMain.offsetHeight / 2}`)
    }
    const pathLength = path.getTotalLength()
    path.style.strokeDasharray = pathLength.toString() 
    path.style.strokeDashoffset = pathLength.toString() 
  } 

  function incrementCounter(selector: string, current: number, target: number, duration: number, letter: string = "") {
    let counter = document.getElementById(selector)
    let stepTime = Math.abs(Math.floor(duration / target))
    if (current < target && counter){
      current++
      counter.innerText = current.toString() + letter
      setTimeout(() => 
      incrementCounter(selector, current, target, duration, letter), stepTime)
    }
  }

  // increment
  incrementCounter('art-counter', 0, 85, 1000) 
  incrementCounter('youtube-counter', 0, 598, 1000, "k") 
  incrementCounter('reviews-counter', 0, 821, 1000) 


  window.addEventListener('DOMContentLoaded', updatePath)
  window.addEventListener('resize', updatePath)
</script>